<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classspace_1_1random_gen_1_1_normal" kind="class" language="C++" prot="public">
    <compoundname>space::randomGen::Normal</compoundname>
    <includes refid="rand-generator_8hpp" local="no">rand-generator.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Dtype</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_normal_1a5a4ab7043537a74b09babfd184c10682" prot="private" static="no" mutable="no">
        <type>std::random_device</type>
        <definition>std::random_device space::randomGen::Normal&lt; Dtype &gt;::rd_</definition>
        <argsstring></argsstring>
        <name>rd_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rand-generator.hpp" line="189" column="1" bodyfile="rand-generator.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_normal_1af2e01cc37a22d95fd3a536c189bc5437" prot="private" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 space::randomGen::Normal&lt; Dtype &gt;::gen_</definition>
        <argsstring></argsstring>
        <name>gen_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rand-generator.hpp" line="190" column="1" bodyfile="rand-generator.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_normal_1add7b62d604c44c48ee4da2e0dd7f74f1" prot="private" static="no" mutable="no">
        <type>std::normal_distribution&lt; Dtype &gt;</type>
        <definition>std::normal_distribution&lt;Dtype&gt; space::randomGen::Normal&lt; Dtype &gt;::dist_</definition>
        <argsstring></argsstring>
        <name>dist_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rand-generator.hpp" line="191" column="1" bodyfile="rand-generator.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_normal_1a80bd0d073276bba00110ef0b15a13af7" prot="private" static="yes" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex space::randomGen::Normal&lt; Dtype &gt;::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rand-generator.hpp" line="192" column="1" bodyfile="rand-generator.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_normal_1a53e1d2be597cde0ffb0aac0096373bd6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>space::randomGen::Normal&lt; Dtype &gt;::Normal</definition>
        <argsstring>()</argsstring>
        <name>Normal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rand-generator.hpp" line="185" column="1" bodyfile="rand-generator.hpp" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_normal_1a24d5a19b6830811a7cbf5331b1702c30" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::randomGen::Normal&lt; Dtype &gt;::Normal</definition>
        <argsstring>(const Normal &amp;)=default</argsstring>
        <name>Normal</name>
        <param>
          <type>const <ref refid="classspace_1_1random_gen_1_1_normal" kindref="compound">Normal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rand-generator.hpp" line="187" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_normal_1afd03bde0c5bdf57f3db67daf229cd582" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype</type>
        <definition>static Dtype space::randomGen::Normal&lt; Dtype &gt;::get</definition>
        <argsstring>(Dtype mean=0, Dtype sigma=1)</argsstring>
        <name>get</name>
        <param>
          <type>Dtype</type>
          <declname>mean</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>Dtype</type>
          <declname>sigma</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rand-generator.hpp" line="195" column="1" bodyfile="rand-generator.hpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_normal_1a0487efb2868aca762840be592edb4fa7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype</type>
        <definition>static Dtype space::randomGen::Normal&lt; Dtype &gt;::lock_get</definition>
        <argsstring>(Dtype mean=0, Dtype sigma=1)</argsstring>
        <name>lock_get</name>
        <param>
          <type>Dtype</type>
          <declname>mean</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>Dtype</type>
          <declname>sigma</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rand-generator.hpp" line="200" column="1" bodyfile="rand-generator.hpp" bodystart="200" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_normal_1aa2e4bcaaf53e99b1324b1f597f3d5922" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RandGen</type>
          </param>
        </templateparamlist>
        <type>Dtype</type>
        <definition>static Dtype space::randomGen::Normal&lt; Dtype &gt;::get</definition>
        <argsstring>(RandGen &amp;gen, Dtype mean=0, Dtype sigma=1)</argsstring>
        <name>get</name>
        <param>
          <type>RandGen &amp;</type>
          <declname>gen</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>mean</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>Dtype</type>
          <declname>sigma</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="rand-generator.hpp" line="212" column="1" bodyfile="rand-generator.hpp" bodystart="212" bodyend="215"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="205">
        <label>space::randomGen::Normal&lt; Dtype &gt;</label>
        <link refid="classspace_1_1random_gen_1_1_normal"/>
      </node>
    </collaborationgraph>
    <location file="rand-generator.hpp" line="183" column="1" bodyfile="rand-generator.hpp" bodystart="183" bodyend="216"/>
    <listofallmembers>
      <member refid="classspace_1_1random_gen_1_1_normal_1add7b62d604c44c48ee4da2e0dd7f74f1" prot="private" virt="non-virtual"><scope>space::randomGen::Normal</scope><name>dist_</name></member>
      <member refid="classspace_1_1random_gen_1_1_normal_1af2e01cc37a22d95fd3a536c189bc5437" prot="private" virt="non-virtual"><scope>space::randomGen::Normal</scope><name>gen_</name></member>
      <member refid="classspace_1_1random_gen_1_1_normal_1afd03bde0c5bdf57f3db67daf229cd582" prot="public" virt="non-virtual"><scope>space::randomGen::Normal</scope><name>get</name></member>
      <member refid="classspace_1_1random_gen_1_1_normal_1aa2e4bcaaf53e99b1324b1f597f3d5922" prot="public" virt="non-virtual"><scope>space::randomGen::Normal</scope><name>get</name></member>
      <member refid="classspace_1_1random_gen_1_1_normal_1a0487efb2868aca762840be592edb4fa7" prot="public" virt="non-virtual"><scope>space::randomGen::Normal</scope><name>lock_get</name></member>
      <member refid="classspace_1_1random_gen_1_1_normal_1a80bd0d073276bba00110ef0b15a13af7" prot="private" virt="non-virtual"><scope>space::randomGen::Normal</scope><name>mutex_</name></member>
      <member refid="classspace_1_1random_gen_1_1_normal_1a53e1d2be597cde0ffb0aac0096373bd6" prot="private" virt="non-virtual"><scope>space::randomGen::Normal</scope><name>Normal</name></member>
      <member refid="classspace_1_1random_gen_1_1_normal_1a24d5a19b6830811a7cbf5331b1702c30" prot="private" virt="non-virtual"><scope>space::randomGen::Normal</scope><name>Normal</name></member>
      <member refid="classspace_1_1random_gen_1_1_normal_1a5a4ab7043537a74b09babfd184c10682" prot="private" virt="non-virtual"><scope>space::randomGen::Normal</scope><name>rd_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
