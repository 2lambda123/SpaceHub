<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classspace_1_1_error_checker" kind="class" language="C++" prot="public">
    <compoundname>space::ErrorChecker</compoundname>
    <includes refid="error-checker_8hpp" local="no">error-checker.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Derived</declname>
        <defname>Derived</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1_error_checker_1ab8d93f54ecf15f2f131d7411de8115d8" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend space::ErrorChecker&lt; Derived &gt;::Derived</definition>
        <argsstring></argsstring>
        <name>Derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="error-checker.hpp" line="67" column="12" bodyfile="error-checker.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspace_1_1_error_checker_1a951db47fa7bf5b27b20872a6534d094a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::ErrorChecker&lt; Derived &gt;::DECLARE_CRTP_ACCESSOR</definition>
        <argsstring>(Derived, auto, atol)</argsstring>
        <name>DECLARE_CRTP_ACCESSOR</name>
        <param>
          <type>Derived</type>
        </param>
        <param>
          <type>auto</type>
        </param>
        <param>
          <type>atol</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="error-checker.hpp" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_error_checker_1a397884fd1964b51aa8d8b61085b2f1b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::ErrorChecker&lt; Derived &gt;::DECLARE_CRTP_ACCESSOR</definition>
        <argsstring>(Derived, auto, rtol)</argsstring>
        <name>DECLARE_CRTP_ACCESSOR</name>
        <param>
          <type>Derived</type>
        </param>
        <param>
          <type>auto</type>
        </param>
        <param>
          <type>rtol</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="error-checker.hpp" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_error_checker_1abadc5f31586cfa7a244eb8ceda54b16e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; space::ErrorChecker&lt; Derived &gt;::derived</definition>
        <argsstring>()</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="error-checker.hpp" line="40" column="13" bodyfile="error-checker.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_error_checker_1ab49f3e7167d721787bc4942b652513b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::ErrorChecker&lt; Derived &gt;::set_atol</definition>
        <argsstring>(T)</argsstring>
        <name>set_atol</name>
        <param>
          <type>T</type>
          <defname>atol</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="error-checker.hpp" line="46" column="10" bodyfile="error-checker.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_error_checker_1a4afa46b4bf4dc6e85d09f47bdf07088a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::ErrorChecker&lt; Derived &gt;::set_rtol</definition>
        <argsstring>(T)</argsstring>
        <name>set_rtol</name>
        <param>
          <type>T</type>
          <defname>rtol</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="error-checker.hpp" line="52" column="10" bodyfile="error-checker.hpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_error_checker_1ae7a9fcd1c9454461e3f954f0f54d81a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Array</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto space::ErrorChecker&lt; Derived &gt;::error</definition>
        <argsstring>(Array const &amp;y0, Array const &amp;y1) -&gt; typename Array::value_type</argsstring>
        <name>error</name>
        <param>
          <type>Array const &amp;</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>Array const &amp;</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="error-checker.hpp" line="55" column="10" bodyfile="error-checker.hpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_error_checker_1a841109edd38025b449347fee4b67c245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Array</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto space::ErrorChecker&lt; Derived &gt;::error</definition>
        <argsstring>(Array const &amp;scale, Array const &amp;y0, Array const &amp;y1) -&gt; typename Array::value_type</argsstring>
        <name>error</name>
        <param>
          <type>Array const &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>Array const &amp;</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>Array const &amp;</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="error-checker.hpp" line="58" column="10" bodyfile="error-checker.hpp" bodystart="99" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspace_1_1_error_checker_1a4dd0d0422ef946fcc1460b076f7eb049" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::ErrorChecker&lt; Derived &gt;::ErrorChecker</definition>
        <argsstring>()=default</argsstring>
        <name>ErrorChecker</name>
        <briefdescription>
<para>Construct a new <ref refid="classspace_1_1_error_checker" kindref="compound">ErrorChecker</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="error-checker.hpp" line="65" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CRTP base class of a &apos;Structure of Array&apos; kind particle set. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="error-checker.hpp" line="21" column="21" bodyfile="error-checker.hpp" bodystart="21" bodyend="68"/>
    <listofallmembers>
      <member refid="classspace_1_1_error_checker_1a951db47fa7bf5b27b20872a6534d094a" prot="public" virt="non-virtual"><scope>space::ErrorChecker</scope><name>DECLARE_CRTP_ACCESSOR</name></member>
      <member refid="classspace_1_1_error_checker_1a397884fd1964b51aa8d8b61085b2f1b1" prot="public" virt="non-virtual"><scope>space::ErrorChecker</scope><name>DECLARE_CRTP_ACCESSOR</name></member>
      <member refid="classspace_1_1_error_checker_1ab8d93f54ecf15f2f131d7411de8115d8" prot="private" virt="non-virtual"><scope>space::ErrorChecker</scope><name>Derived</name></member>
      <member refid="classspace_1_1_error_checker_1abadc5f31586cfa7a244eb8ceda54b16e" prot="public" virt="non-virtual"><scope>space::ErrorChecker</scope><name>derived</name></member>
      <member refid="classspace_1_1_error_checker_1ae7a9fcd1c9454461e3f954f0f54d81a8" prot="public" virt="non-virtual"><scope>space::ErrorChecker</scope><name>error</name></member>
      <member refid="classspace_1_1_error_checker_1a841109edd38025b449347fee4b67c245" prot="public" virt="non-virtual"><scope>space::ErrorChecker</scope><name>error</name></member>
      <member refid="classspace_1_1_error_checker_1a4dd0d0422ef946fcc1460b076f7eb049" prot="private" virt="non-virtual"><scope>space::ErrorChecker</scope><name>ErrorChecker</name></member>
      <member refid="classspace_1_1_error_checker_1ab49f3e7167d721787bc4942b652513b1" prot="public" virt="non-virtual"><scope>space::ErrorChecker</scope><name>set_atol</name></member>
      <member refid="classspace_1_1_error_checker_1a4afa46b4bf4dc6e85d09f47bdf07088a" prot="public" virt="non-virtual"><scope>space::ErrorChecker</scope><name>set_rtol</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
