<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structspace_1_1calc_1_1has__method__chain__pos" kind="struct" language="C++" prot="public">
    <compoundname>space::calc::has_method_chain_pos</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structspace_1_1calc_1_1has__method__chain__pos_1a1aea680c1f2042b33b415d3040d42bf6" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool space::calc::has_method_chain_pos&lt; T, Args &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>= decltype(check&lt;T&gt;(nullptr))::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core-computation.hpp" line="192" column="173" bodyfile="core-computation.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structspace_1_1calc_1_1has__method__chain__pos_1a2c14901b6b6088a15ab490a5bd0c0839" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr static auto</type>
        <definition>constexpr static auto space::calc::has_method_chain_pos&lt; T, Args &gt;::check</definition>
        <argsstring>(const void *) -&gt; decltype(std::declval&lt; U &gt;(). chain_pos(std::declval&lt; Args &gt;()...), std::true_type())</argsstring>
        <name>check</name>
        <param>
          <type>const void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core-computation.hpp" line="192" column="79"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1calc_1_1has__method__chain__pos_1ac37b876aed6c99c04a0fd76f9288325d" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr static std::false_type</type>
        <definition>constexpr static std::false_type space::calc::has_method_chain_pos&lt; T, Args &gt;::check</definition>
        <argsstring>(...)</argsstring>
        <name>check</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core-computation.hpp" line="192" column="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="core-computation.hpp" line="192" column="44" bodyfile="core-computation.hpp" bodystart="192" bodyend="192"/>
    <listofallmembers>
      <member refid="structspace_1_1calc_1_1has__method__chain__pos_1a2c14901b6b6088a15ab490a5bd0c0839" prot="public" virt="non-virtual"><scope>space::calc::has_method_chain_pos</scope><name>check</name></member>
      <member refid="structspace_1_1calc_1_1has__method__chain__pos_1ac37b876aed6c99c04a0fd76f9288325d" prot="public" virt="non-virtual"><scope>space::calc::has_method_chain_pos</scope><name>check</name></member>
      <member refid="structspace_1_1calc_1_1has__method__chain__pos_1a1aea680c1f2042b33b415d3040d42bf6" prot="public" virt="non-virtual"><scope>space::calc::has_method_chain_pos</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
