<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classspace_1_1multi_thread_1_1_concurrent_deque" kind="class" language="C++" prot="public">
    <compoundname>space::multiThread::ConcurrentDeque</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1multi_thread_1_1_concurrent_deque_1aede7843209415230730c3277c5d0952c" prot="private" static="no" mutable="no">
        <type>std::deque&lt; T &gt;</type>
        <definition>std::deque&lt;T&gt; space::multiThread::ConcurrentDeque&lt; T &gt;::deque_</definition>
        <argsstring></argsstring>
        <name>deque_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="73" column="16" bodyfile="multi-thread/concurrent-queue.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1multi_thread_1_1_concurrent_deque_1ac594d0dc15874d74abc029b560322478" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex space::multiThread::ConcurrentDeque&lt; T &gt;::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="74" column="16" bodyfile="multi-thread/concurrent-queue.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1multi_thread_1_1_concurrent_deque_1a2ea6b06e83dc2ff918f24f08344fd964" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable space::multiThread::ConcurrentDeque&lt; T &gt;::cv_</definition>
        <argsstring></argsstring>
        <name>cv_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="75" column="29" bodyfile="multi-thread/concurrent-queue.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1multi_thread_1_1_concurrent_deque_1a22608c0500596c3177f13ecca6359841" prot="private" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool space::multiThread::ConcurrentDeque&lt; T &gt;::stop_</definition>
        <argsstring></argsstring>
        <name>stop_</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="76" column="22" bodyfile="multi-thread/concurrent-queue.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspace_1_1multi_thread_1_1_concurrent_deque_1ac941a2eacd132b3b60285e63fa216681" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>space::multiThread::ConcurrentDeque&lt; T &gt;::~ConcurrentDeque</definition>
        <argsstring>()</argsstring>
        <name>~ConcurrentDeque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="14" column="5" bodyfile="multi-thread/concurrent-queue.h" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi_thread_1_1_concurrent_deque_1a7a4d059fc7c2c1439ca47579de913a19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::multiThread::ConcurrentDeque&lt; T &gt;::emplace_back</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>emplace_back</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="19" column="10" bodyfile="multi-thread/concurrent-queue.h" bodystart="19" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi_thread_1_1_concurrent_deque_1ab6a1c588b70defc175837ffab9b766d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool space::multiThread::ConcurrentDeque&lt; T &gt;::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="27" column="10" bodyfile="multi-thread/concurrent-queue.h" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi_thread_1_1_concurrent_deque_1a9a2a6cf7adddf46d6cfa4b4facf54287" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void space::multiThread::ConcurrentDeque&lt; T &gt;::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="32" column="10" bodyfile="multi-thread/concurrent-queue.h" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi_thread_1_1_concurrent_deque_1a03511ca85e2f43a905bbe862d93afafa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::multiThread::ConcurrentDeque&lt; T &gt;::emplace_front</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>emplace_front</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="38" column="10" bodyfile="multi-thread/concurrent-queue.h" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi_thread_1_1_concurrent_deque_1a9994910b825b1149277e7af242d18575" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool space::multiThread::ConcurrentDeque&lt; T &gt;::try_pop_front</definition>
        <argsstring>(T &amp;data) noexcept</argsstring>
        <name>try_pop_front</name>
        <param>
          <type>T &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="46" column="10" bodyfile="multi-thread/concurrent-queue.h" bodystart="46" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi_thread_1_1_concurrent_deque_1a0cb5fded2768be883aac9c1c8145b716" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool space::multiThread::ConcurrentDeque&lt; T &gt;::try_pop_back</definition>
        <argsstring>(T &amp;data) noexcept</argsstring>
        <name>try_pop_back</name>
        <param>
          <type>T &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="multi-thread/concurrent-queue.h" line="59" column="10" bodyfile="multi-thread/concurrent-queue.h" bodystart="59" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="multi-thread/concurrent-queue.h" line="12" column="24" bodyfile="multi-thread/concurrent-queue.h" bodystart="12" bodyend="77"/>
    <listofallmembers>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1a2ea6b06e83dc2ff918f24f08344fd964" prot="private" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>cv_</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1aede7843209415230730c3277c5d0952c" prot="private" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>deque_</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1a7a4d059fc7c2c1439ca47579de913a19" prot="public" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>emplace_back</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1a03511ca85e2f43a905bbe862d93afafa" prot="public" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>emplace_front</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1ab6a1c588b70defc175837ffab9b766d6" prot="public" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>empty</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1ac594d0dc15874d74abc029b560322478" prot="private" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>mutex_</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1a9a2a6cf7adddf46d6cfa4b4facf54287" prot="public" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>stop</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1a22608c0500596c3177f13ecca6359841" prot="private" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>stop_</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1a0cb5fded2768be883aac9c1c8145b716" prot="public" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>try_pop_back</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1a9994910b825b1149277e7af242d18575" prot="public" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>try_pop_front</name></member>
      <member refid="classspace_1_1multi_thread_1_1_concurrent_deque_1ac941a2eacd132b3b60285e63fa216681" prot="public" virt="non-virtual"><scope>space::multiThread::ConcurrentDeque</scope><name>~ConcurrentDeque</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
