<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classspace_1_1tools_1_1_timer" kind="class" language="C++" prot="public">
    <compoundname>space::tools::Timer</compoundname>
    <includes refid="timer_8hpp" local="no">timer.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classspace_1_1tools_1_1_timer_1a2b2c749b82312ad22d3e7e0a746e7049" prot="private" static="no">
        <type>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt;</type>
        <definition>using space::tools::Timer::Time =  std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt;</definition>
        <argsstring></argsstring>
        <name>Time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="tools/timer.hpp" line="36" column="1" bodyfile="tools/timer.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1tools_1_1_timer_1a5921219f65e98646706367c079681271" prot="private" static="no" mutable="no">
        <type>Time</type>
        <definition>Time space::tools::Timer::start_</definition>
        <argsstring></argsstring>
        <name>start_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="tools/timer.hpp" line="78" column="1" bodyfile="tools/timer.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1tools_1_1_timer_1aea33a2ec56f8d3b2b5cac72338ac8533" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float space::tools::Timer::duration_</definition>
        <argsstring></argsstring>
        <name>duration_</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="tools/timer.hpp" line="79" column="1" bodyfile="tools/timer.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1tools_1_1_timer_1a51c102564c585720c86552b8588bf036" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool space::tools::Timer::active_</definition>
        <argsstring></argsstring>
        <name>active_</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="tools/timer.hpp" line="80" column="1" bodyfile="tools/timer.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspace_1_1tools_1_1_timer_1a7155bf9009002be96674e8faf446b51f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void space::tools::Timer::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
            <para>Start the timer.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="tools/timer.hpp" line="42" column="1" bodyfile="tools/timer.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1tools_1_1_timer_1ae26d63313a7416a2dddd6bcf6a4e4b77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float space::tools::Timer::get_time</definition>
        <argsstring>()</argsstring>
        <name>get_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
            <para>Get the time in milli-second.
                <simplesect kind="return">
                    <para>Time duration from <ref
                            refid="classspace_1_1tools_1_1_timer_1a7155bf9009002be96674e8faf446b51f" kindref="member">
                        start()</ref>.
                    </para>
                </simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="tools/timer.hpp" line="51" column="1" bodyfile="tools/timer.hpp" bodystart="51" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1tools_1_1_timer_1abe4da3e4edb19f7984ca350e7ca67ee6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void space::tools::Timer::pause</definition>
        <argsstring>()</argsstring>
        <name>pause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
            <para>Pause the timer.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="tools/timer.hpp" line="64" column="1" bodyfile="tools/timer.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1tools_1_1_timer_1a80e6ff22760a000254bb1e98ccc08bfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void space::tools::Timer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
            <para>Reset the timer.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="tools/timer.hpp" line="72" column="1" bodyfile="tools/timer.hpp" bodystart="72" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
        <para>High precision timer for benchmark.</para>
    </detaileddescription>
    <collaborationgraph>
        <node id="371">
        <label>space::tools::Timer</label>
        <link refid="classspace_1_1tools_1_1_timer"/>
      </node>
    </collaborationgraph>
      <location file="tools/timer.hpp" line="35" column="1" bodyfile="tools/timer.hpp" bodystart="35" bodyend="81"/>
    <listofallmembers>
      <member refid="classspace_1_1tools_1_1_timer_1a51c102564c585720c86552b8588bf036" prot="private" virt="non-virtual"><scope>space::tools::Timer</scope><name>active_</name></member>
      <member refid="classspace_1_1tools_1_1_timer_1aea33a2ec56f8d3b2b5cac72338ac8533" prot="private" virt="non-virtual"><scope>space::tools::Timer</scope><name>duration_</name></member>
      <member refid="classspace_1_1tools_1_1_timer_1ae26d63313a7416a2dddd6bcf6a4e4b77" prot="public" virt="non-virtual"><scope>space::tools::Timer</scope><name>get_time</name></member>
      <member refid="classspace_1_1tools_1_1_timer_1abe4da3e4edb19f7984ca350e7ca67ee6" prot="public" virt="non-virtual"><scope>space::tools::Timer</scope><name>pause</name></member>
      <member refid="classspace_1_1tools_1_1_timer_1a80e6ff22760a000254bb1e98ccc08bfd" prot="public" virt="non-virtual"><scope>space::tools::Timer</scope><name>reset</name></member>
      <member refid="classspace_1_1tools_1_1_timer_1a7155bf9009002be96674e8faf446b51f" prot="public" virt="non-virtual"><scope>space::tools::Timer</scope><name>start</name></member>
      <member refid="classspace_1_1tools_1_1_timer_1a5921219f65e98646706367c079681271" prot="private" virt="non-virtual"><scope>space::tools::Timer</scope><name>start_</name></member>
      <member refid="classspace_1_1tools_1_1_timer_1a2b2c749b82312ad22d3e7e0a746e7049" prot="private" virt="non-virtual"><scope>space::tools::Timer</scope><name>Time</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
