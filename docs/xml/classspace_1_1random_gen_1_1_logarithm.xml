<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classspace_1_1random_gen_1_1_logarithm" kind="class" language="C++" prot="public">
    <compoundname>space::randomGen::Logarithm</compoundname>
    <includes refid="rand-generator_8hpp" local="no">rand-generator.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Dtype</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_logarithm_1a26c8838143deb8bb48633d61681e0e03" prot="private" static="no" mutable="no">
        <type>std::random_device</type>
        <definition>std::random_device space::randomGen::Logarithm&lt; Dtype &gt;::rd_</definition>
        <argsstring></argsstring>
        <name>rd_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="84" column="1" bodyfile="rand-generator.hpp" bodystart="84"
                    bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_logarithm_1abab3bd8ddc86c5d68ee0c316e0b9dcb1" prot="private" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 space::randomGen::Logarithm&lt; Dtype &gt;::gen_</definition>
        <argsstring></argsstring>
        <name>gen_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="85" column="1" bodyfile="rand-generator.hpp" bodystart="85"
                    bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_logarithm_1ad2c17595f5cce02b92aa4fde18d41c60" prot="private" static="no" mutable="no">
        <type>std::uniform_real_distribution&lt; Dtype &gt;</type>
        <definition>std::uniform_real_distribution&lt;Dtype&gt; space::randomGen::Logarithm&lt; Dtype &gt;::dist_</definition>
        <argsstring></argsstring>
        <name>dist_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="86" column="1" bodyfile="rand-generator.hpp" bodystart="86"
                    bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_logarithm_1a164ad700ff6b6556b7bc6dd16df8e2c1" prot="private" static="yes" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex space::randomGen::Logarithm&lt; Dtype &gt;::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="87" column="1" bodyfile="rand-generator.hpp" bodystart="87"
                    bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_logarithm_1a83664bd18d9222d889cb0e66cf300f60" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>space::randomGen::Logarithm&lt; Dtype &gt;::Logarithm</definition>
        <argsstring>()</argsstring>
        <name>Logarithm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="80" column="1" bodyfile="rand-generator.hpp" bodystart="80"
                    bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_logarithm_1a0926074caeb3ede224cb4075c81e1883" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::randomGen::Logarithm&lt; Dtype &gt;::Logarithm</definition>
        <argsstring>(const Logarithm &amp;)=default</argsstring>
        <name>Logarithm</name>
        <param>
          <type>const <ref refid="classspace_1_1random_gen_1_1_logarithm" kindref="compound">Logarithm</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="82" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_logarithm_1a23a34fe078785e968a1f2d8fd6bbfea6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype</type>
        <definition>static Dtype space::randomGen::Logarithm&lt; Dtype &gt;::get</definition>
        <argsstring>(Dtype low, Dtype high)</argsstring>
        <name>get</name>
        <param>
          <type>Dtype</type>
          <declname>low</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="90" column="1" bodyfile="rand-generator.hpp" bodystart="90"
                    bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_logarithm_1a9b298625678cdaef33a8b7d37efa1a5e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype</type>
        <definition>static Dtype space::randomGen::Logarithm&lt; Dtype &gt;::lock_get</definition>
        <argsstring>(Dtype low, Dtype high)</argsstring>
        <name>lock_get</name>
        <param>
          <type>Dtype</type>
          <declname>low</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="97" column="1" bodyfile="rand-generator.hpp" bodystart="97"
                    bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_logarithm_1acfbae3d3ed5e1c0ceee2f58ded8db30d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RandGen</type>
          </param>
        </templateparamlist>
        <type>Dtype</type>
        <definition>static Dtype space::randomGen::Logarithm&lt; Dtype &gt;::get</definition>
        <argsstring>(RandGen &amp;gen, Dtype low, Dtype high)</argsstring>
        <name>get</name>
        <param>
          <type>RandGen &amp;</type>
          <declname>gen</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>low</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="111" column="1" bodyfile="rand-generator.hpp" bodystart="111"
                    bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
        <node id="187">
        <label>space::randomGen::Logarithm&lt; Dtype &gt;</label>
        <link refid="classspace_1_1random_gen_1_1_logarithm"/>
      </node>
    </collaborationgraph>
      <location file="rand-generator.hpp" line="78" column="1" bodyfile="rand-generator.hpp" bodystart="78"
                bodyend="117"/>
    <listofallmembers>
      <member refid="classspace_1_1random_gen_1_1_logarithm_1ad2c17595f5cce02b92aa4fde18d41c60" prot="private" virt="non-virtual"><scope>space::randomGen::Logarithm</scope><name>dist_</name></member>
      <member refid="classspace_1_1random_gen_1_1_logarithm_1abab3bd8ddc86c5d68ee0c316e0b9dcb1" prot="private" virt="non-virtual"><scope>space::randomGen::Logarithm</scope><name>gen_</name></member>
      <member refid="classspace_1_1random_gen_1_1_logarithm_1a23a34fe078785e968a1f2d8fd6bbfea6" prot="public" virt="non-virtual"><scope>space::randomGen::Logarithm</scope><name>get</name></member>
      <member refid="classspace_1_1random_gen_1_1_logarithm_1acfbae3d3ed5e1c0ceee2f58ded8db30d" prot="public" virt="non-virtual"><scope>space::randomGen::Logarithm</scope><name>get</name></member>
      <member refid="classspace_1_1random_gen_1_1_logarithm_1a9b298625678cdaef33a8b7d37efa1a5e" prot="public" virt="non-virtual"><scope>space::randomGen::Logarithm</scope><name>lock_get</name></member>
      <member refid="classspace_1_1random_gen_1_1_logarithm_1a83664bd18d9222d889cb0e66cf300f60" prot="private" virt="non-virtual"><scope>space::randomGen::Logarithm</scope><name>Logarithm</name></member>
      <member refid="classspace_1_1random_gen_1_1_logarithm_1a0926074caeb3ede224cb4075c81e1883" prot="private" virt="non-virtual"><scope>space::randomGen::Logarithm</scope><name>Logarithm</name></member>
      <member refid="classspace_1_1random_gen_1_1_logarithm_1a164ad700ff6b6556b7bc6dd16df8e2c1" prot="private" virt="non-virtual"><scope>space::randomGen::Logarithm</scope><name>mutex_</name></member>
      <member refid="classspace_1_1random_gen_1_1_logarithm_1a26c8838143deb8bb48633d61681e0e03" prot="private" virt="non-virtual"><scope>space::randomGen::Logarithm</scope><name>rd_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
