<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classspace_1_1_interactions" kind="class" language="C++" prot="public">
    <compoundname>space::Interactions</compoundname>
    <includes refid="interaction_8hpp" local="no">interaction.hpp</includes>
    <innerclass refid="structspace_1_1_interactions_1_1has__method__impl__eval__extra__vel__dep__acc" prot="private">space::Interactions::has_method_impl_eval_extra_vel_dep_acc</innerclass>
    <innerclass refid="structspace_1_1_interactions_1_1has__method__impl__eval__extra__vel__indep__acc" prot="private">space::Interactions::has_method_impl_eval_extra_vel_indep_acc</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Derived</declname>
        <defname>Derived</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classspace_1_1_interactions_1a722a9fafdf2e329951f30daa07f0fbe8" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool space::Interactions&lt; Derived &gt;::ext_vel_dep</definition>
        <argsstring></argsstring>
        <name>ext_vel_dep</name>
        <initializer>{has_method_impl_eval_extra_vel_dep_acc &lt; Derived ,&gt;::value}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-success" /> <bold>auto impl</bold></para><para>Variable to check if external velocity dependent forces exist the interaction. If the Derived class implements method impl_eval_extra_vel_dep_acc(). The value is <computeroutput>true</computeroutput>, otherwise this value is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interaction.hpp" line="38" column="1" bodyfile="interaction.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1_interactions_1ad8453af189e176a74e97e536c5bff568" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool space::Interactions&lt; Derived &gt;::ext_vel_indep</definition>
        <argsstring></argsstring>
        <name>ext_vel_indep</name>
        <initializer>{has_method_impl_eval_extra_vel_indep_acc &lt; Derived ,&gt;::value}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-success" /> <bold>auto impl</bold></para><para>Variable to check if external velocity independent forces exist the interaction. If the Derived class implements method impl_eval_extra_vel_indep_acc(). The value is <computeroutput>true</computeroutput>, otherwise this value is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interaction.hpp" line="46" column="1" bodyfile="interaction.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1_interactions_1ac8442b99470b79176e5c1cdd3415fc4d" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend space::Interactions&lt; Derived &gt;::Derived</definition>
        <argsstring></argsstring>
        <name>Derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interaction.hpp" line="113" column="1" bodyfile="interaction.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspace_1_1_interactions_1a5c1fd12a58850802821dd492396e8138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; space::Interactions&lt; Derived &gt;::derived</definition>
        <argsstring>()</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-success" /> <bold>auto impl</bold></para><para>The downcast interface of Base class to Derived class. <simplesect kind="return"><para>Derived </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interaction.hpp" line="55" column="1" bodyfile="interaction.hpp" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_interactions_1a6688576102282c07dc5c7b6b2745be5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classspace_1_1_particles" kindref="compound">Particles</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Interactions&lt; Derived &gt;::eval_acc</definition>
        <argsstring>(Particles const &amp;particles, typename Particles::Coord &amp;acceleration)</argsstring>
        <name>eval_acc</name>
        <param>
          <type><ref refid="classspace_1_1_particles" kindref="compound">Particles</ref> const &amp;</type>
          <declname>particles</declname>
        </param>
        <param>
          <type>typename Particles::Coord &amp;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-danger" /> <bold>must impl</bold></para><para>Evaluate the total acceleration of the current state of a given particle system.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classspace_1_1_particles" kindref="compound">Particles</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the particle system. This type must have method mass(), pos(), vel(), time(); type member <computeroutput>Coord</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">particles</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle system need to be evaluated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>The output of the evaluated acceleration. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interaction.hpp" line="68" column="1" bodyfile="interaction.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_interactions_1a2eaa8fc6ade5e5d127d5d93f6e75663e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classspace_1_1_particles" kindref="compound">Particles</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Interactions&lt; Derived &gt;::eval_extra_vel_dep_acc</definition>
        <argsstring>(Particles const &amp;particles, typename Particles::Coord &amp;acceleration)</argsstring>
        <name>eval_extra_vel_dep_acc</name>
        <param>
          <type><ref refid="classspace_1_1_particles" kindref="compound">Particles</ref> const &amp;</type>
          <declname>particles</declname>
        </param>
        <param>
          <type>typename Particles::Coord &amp;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-warning" /> <bold>optional impl</bold> <computeroutput>&gt; external velocity dependent forces exist.</computeroutput></para><para>Evaluate the external velocity dependent acceleration of the current state of a given particle system.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classspace_1_1_particles" kindref="compound">Particles</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the particle system. This type must have method mass(), pos(), vel(); type member <computeroutput>Coord</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">particles</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle system need to be evaluated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>The output of the evaluated acceleration. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interaction.hpp" line="81" column="1" bodyfile="interaction.hpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_interactions_1a42e012c717f1ac61c401e7492203ea1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classspace_1_1_particles" kindref="compound">Particles</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Interactions&lt; Derived &gt;::eval_extra_vel_indep_acc</definition>
        <argsstring>(Particles const &amp;particles, typename Particles::Coord &amp;acceleration)</argsstring>
        <name>eval_extra_vel_indep_acc</name>
        <param>
          <type><ref refid="classspace_1_1_particles" kindref="compound">Particles</ref> const &amp;</type>
          <declname>particles</declname>
        </param>
        <param>
          <type>typename Particles::Coord &amp;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-warning" /> <bold>optional impl</bold> <computeroutput>&gt; external velocity independent forces exist.</computeroutput></para><para>Evaluate the external velocity independent acceleration of the current state of a given particle system.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classspace_1_1_particles" kindref="compound">Particles</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the particle system. This type must have method mass(), pos(); type member <computeroutput>Coord</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">particles</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle system need to be evaluated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>The output of the evaluated acceleration. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interaction.hpp" line="94" column="1" bodyfile="interaction.hpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_interactions_1ae8ccb90af06fe343684870d2c93a54fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classspace_1_1_particles" kindref="compound">Particles</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Interactions&lt; Derived &gt;::eval_newtonian_acc</definition>
        <argsstring>(Particles const &amp;particles, typename Particles::Coord &amp;acceleration)</argsstring>
        <name>eval_newtonian_acc</name>
        <param>
          <type><ref refid="classspace_1_1_particles" kindref="compound">Particles</ref> const &amp;</type>
          <declname>particles</declname>
        </param>
        <param>
          <type>typename Particles::Coord &amp;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-danger" /> <bold>must impl</bold></para><para>Evaluate the internal newtonian acceleration of the current state of a given particle system.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classspace_1_1_particles" kindref="compound">Particles</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the particle system. This type must have method mass(), pos(); type member <computeroutput>Coord</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">particles</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle system need to be evaluated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>The output of the evaluated acceleration. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interaction.hpp" line="107" column="1" bodyfile="interaction.hpp" bodystart="146" bodyend="148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspace_1_1_interactions_1ae8bd165e3715550c9541ea0087729610" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::Interactions&lt; Derived &gt;::Interactions</definition>
        <argsstring>()=default</argsstring>
        <name>Interactions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interaction.hpp" line="111" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Abstract class of interactions. A class implements(partly/fully) the interfaces of this class via CRTP idiom can be used cross the system as interaction of the concept <computeroutput><ref refid="classspace_1_1_interactions" kindref="compound">Interactions</ref></computeroutput>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The implement class in CRTP idiom. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="153">
        <label>space::Interactions&lt; NewtonianGrav &gt;</label>
        <link refid="classspace_1_1_interactions"/>
        <childnode refid="148" relation="template-instance">
          <edgelabel>&lt; NewtonianGrav &gt;</edgelabel>
        </childnode>
      </node>
      <node id="154">
        <label>space::interactions::NewtonianGrav</label>
        <link refid="classspace_1_1interactions_1_1_newtonian_grav"/>
        <childnode refid="153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="149">
        <label>space::Interactions&lt; PostNewtonianGrav&lt; _1st_order, _2nd_order, _2_5th_order &gt; &gt;</label>
        <link refid="classspace_1_1_interactions"/>
        <childnode refid="148" relation="template-instance">
          <edgelabel>&lt; PostNewtonianGrav&lt; _1st_order, _2nd_order, _2_5th_order &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="150">
        <label>space::interactions::PostNewtonianGrav&lt; _1st_order, _2nd_order, _2_5th_order &gt;</label>
        <link refid="classspace_1_1interactions_1_1_post_newtonian_grav"/>
        <childnode refid="149" relation="public-inheritance">
        </childnode>
      </node>
      <node id="152">
        <label>space::TidalForce</label>
        <link refid="classspace_1_1_tidal_force"/>
        <childnode refid="151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="151">
        <label>space::Interactions&lt; TidalForce &gt;</label>
        <link refid="classspace_1_1_interactions"/>
        <childnode refid="148" relation="template-instance">
          <edgelabel>&lt; TidalForce &gt;</edgelabel>
        </childnode>
      </node>
      <node id="148">
        <label>space::Interactions&lt; Derived &gt;</label>
        <link refid="classspace_1_1_interactions"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="155">
        <label>space::Interactions&lt; Derived &gt;</label>
        <link refid="classspace_1_1_interactions"/>
      </node>
    </collaborationgraph>
    <location file="interaction.hpp" line="23" column="1" bodyfile="interaction.hpp" bodystart="23" bodyend="114"/>
    <listofallmembers>
      <member refid="classspace_1_1_interactions_1ac8442b99470b79176e5c1cdd3415fc4d" prot="private" virt="non-virtual"><scope>space::Interactions</scope><name>Derived</name></member>
      <member refid="classspace_1_1_interactions_1a5c1fd12a58850802821dd492396e8138" prot="public" virt="non-virtual"><scope>space::Interactions</scope><name>derived</name></member>
      <member refid="classspace_1_1_interactions_1a6688576102282c07dc5c7b6b2745be5f" prot="public" virt="non-virtual"><scope>space::Interactions</scope><name>eval_acc</name></member>
      <member refid="classspace_1_1_interactions_1a2eaa8fc6ade5e5d127d5d93f6e75663e" prot="public" virt="non-virtual"><scope>space::Interactions</scope><name>eval_extra_vel_dep_acc</name></member>
      <member refid="classspace_1_1_interactions_1a42e012c717f1ac61c401e7492203ea1e" prot="public" virt="non-virtual"><scope>space::Interactions</scope><name>eval_extra_vel_indep_acc</name></member>
      <member refid="classspace_1_1_interactions_1ae8ccb90af06fe343684870d2c93a54fd" prot="public" virt="non-virtual"><scope>space::Interactions</scope><name>eval_newtonian_acc</name></member>
      <member refid="classspace_1_1_interactions_1a722a9fafdf2e329951f30daa07f0fbe8" prot="public" virt="non-virtual"><scope>space::Interactions</scope><name>ext_vel_dep</name></member>
      <member refid="classspace_1_1_interactions_1ad8453af189e176a74e97e536c5bff568" prot="public" virt="non-virtual"><scope>space::Interactions</scope><name>ext_vel_indep</name></member>
      <member refid="classspace_1_1_interactions_1ae8bd165e3715550c9541ea0087729610" prot="private" virt="non-virtual"><scope>space::Interactions</scope><name>Interactions</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
