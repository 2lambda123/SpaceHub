<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classspace_1_1random_gen_1_1_power_law" kind="class" language="C++" prot="public">
    <compoundname>space::randomGen::PowerLaw</compoundname>
    <includes refid="rand-generator_8hpp" local="no">rand-generator.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Dtype</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_power_law_1a101181b0b3f8b983e3ebca27fc2ee427" prot="private" static="no" mutable="no">
        <type>std::random_device</type>
        <definition>std::random_device space::randomGen::PowerLaw&lt; Dtype &gt;::rd_</definition>
        <argsstring></argsstring>
        <name>rd_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="129" column="1" bodyfile="rand-generator.hpp" bodystart="129"
                    bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_power_law_1a41b7278be020f65b51a2c01d0c5c20f5" prot="private" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 space::randomGen::PowerLaw&lt; Dtype &gt;::gen_</definition>
        <argsstring></argsstring>
        <name>gen_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="130" column="1" bodyfile="rand-generator.hpp" bodystart="130"
                    bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_power_law_1a0d63ce3448bbc112834679f3119d6822" prot="private" static="no" mutable="no">
        <type>std::uniform_real_distribution&lt; Dtype &gt;</type>
        <definition>std::uniform_real_distribution&lt;Dtype&gt; space::randomGen::PowerLaw&lt; Dtype &gt;::dist_</definition>
        <argsstring></argsstring>
        <name>dist_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="131" column="1" bodyfile="rand-generator.hpp" bodystart="131"
                    bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classspace_1_1random_gen_1_1_power_law_1a7792332ba8706c60aec007dc8a29dbde" prot="private" static="yes" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex space::randomGen::PowerLaw&lt; Dtype &gt;::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="132" column="1" bodyfile="rand-generator.hpp" bodystart="132"
                    bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_power_law_1af70e5ba7d382abd414db911e72938828" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>space::randomGen::PowerLaw&lt; Dtype &gt;::PowerLaw</definition>
        <argsstring>()</argsstring>
        <name>PowerLaw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="125" column="1" bodyfile="rand-generator.hpp" bodystart="125"
                    bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_power_law_1a1d2e66280b041b3c9536110c397d48db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::randomGen::PowerLaw&lt; Dtype &gt;::PowerLaw</definition>
        <argsstring>(const PowerLaw &amp;)=default</argsstring>
        <name>PowerLaw</name>
        <param>
          <type>const <ref refid="classspace_1_1random_gen_1_1_power_law" kindref="compound">PowerLaw</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="127" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_power_law_1ac0fe12f4b842f814833ed24270a33150" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype</type>
        <definition>static Dtype space::randomGen::PowerLaw&lt; Dtype &gt;::get</definition>
        <argsstring>(Dtype alpha, Dtype low, Dtype high)</argsstring>
        <name>get</name>
        <param>
          <type>Dtype</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>low</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="135" column="1" bodyfile="rand-generator.hpp" bodystart="135"
                    bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_power_law_1ab5bc89445ac91069040164b7f9983f9b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype</type>
        <definition>static Dtype space::randomGen::PowerLaw&lt; Dtype &gt;::lock_get</definition>
        <argsstring>(Dtype alpha, Dtype low, Dtype high)</argsstring>
        <name>lock_get</name>
        <param>
          <type>Dtype</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>low</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="147" column="1" bodyfile="rand-generator.hpp" bodystart="147"
                    bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1random_gen_1_1_power_law_1a07926441f1aca10903969d6a49f98244" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RandGen</type>
          </param>
        </templateparamlist>
        <type>Dtype</type>
        <definition>static Dtype space::randomGen::PowerLaw&lt; Dtype &gt;::get</definition>
        <argsstring>(RandGen &amp;gen, Dtype alpha, Dtype low, Dtype high)</argsstring>
        <name>get</name>
        <param>
          <type>RandGen &amp;</type>
          <declname>gen</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>low</declname>
        </param>
        <param>
          <type>Dtype</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
          <location file="rand-generator.hpp" line="166" column="1" bodyfile="rand-generator.hpp" bodystart="166"
                    bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
        <node id="272">
        <label>space::randomGen::PowerLaw&lt; Dtype &gt;</label>
        <link refid="classspace_1_1random_gen_1_1_power_law"/>
      </node>
    </collaborationgraph>
      <location file="rand-generator.hpp" line="123" column="1" bodyfile="rand-generator.hpp" bodystart="123"
                bodyend="177"/>
    <listofallmembers>
      <member refid="classspace_1_1random_gen_1_1_power_law_1a0d63ce3448bbc112834679f3119d6822" prot="private" virt="non-virtual"><scope>space::randomGen::PowerLaw</scope><name>dist_</name></member>
      <member refid="classspace_1_1random_gen_1_1_power_law_1a41b7278be020f65b51a2c01d0c5c20f5" prot="private" virt="non-virtual"><scope>space::randomGen::PowerLaw</scope><name>gen_</name></member>
      <member refid="classspace_1_1random_gen_1_1_power_law_1ac0fe12f4b842f814833ed24270a33150" prot="public" virt="non-virtual"><scope>space::randomGen::PowerLaw</scope><name>get</name></member>
      <member refid="classspace_1_1random_gen_1_1_power_law_1a07926441f1aca10903969d6a49f98244" prot="public" virt="non-virtual"><scope>space::randomGen::PowerLaw</scope><name>get</name></member>
      <member refid="classspace_1_1random_gen_1_1_power_law_1ab5bc89445ac91069040164b7f9983f9b" prot="public" virt="non-virtual"><scope>space::randomGen::PowerLaw</scope><name>lock_get</name></member>
      <member refid="classspace_1_1random_gen_1_1_power_law_1a7792332ba8706c60aec007dc8a29dbde" prot="private" virt="non-virtual"><scope>space::randomGen::PowerLaw</scope><name>mutex_</name></member>
      <member refid="classspace_1_1random_gen_1_1_power_law_1af70e5ba7d382abd414db911e72938828" prot="private" virt="non-virtual"><scope>space::randomGen::PowerLaw</scope><name>PowerLaw</name></member>
      <member refid="classspace_1_1random_gen_1_1_power_law_1a1d2e66280b041b3c9536110c397d48db" prot="private" virt="non-virtual"><scope>space::randomGen::PowerLaw</scope><name>PowerLaw</name></member>
      <member refid="classspace_1_1random_gen_1_1_power_law_1a101181b0b3f8b983e3ebca27fc2ee427" prot="private" virt="non-virtual"><scope>space::randomGen::PowerLaw</scope><name>rd_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
