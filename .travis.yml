# Build matrix / environment variables are explained on:
# http://about.travis-ci.org/docs/user/build-configuration/
# This file can be validated on: http://lint.travis-ci.org/

language: cpp
dist: bionic
osx_image: xcode12.2

compiler:
  - gcc
  - clang
os:
  - linux
  - osx

env:
  - BUILD_TYPE=Release
  - CODECOV_TOKEN="60aa14e6-ecdc-43af-97ed-e98698f3f447"

#jobs:
#  allow_failures:
#    - compiler: gcc
#      os: osx

addons:
  apt:
    sources:
      - sourceline: "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main"
        key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
      - sourceline: "ppa:ubuntu-toolchain-r/test"
    packages:
      - clang-10
      - cmake
      - gcc-10
      - g++-10
  homebrew:
    packages:
      - cmake
      - gcc@10
    update: true

install:
  # The following Homebrew packages aren't linked by default, and need to be
  # prepended to the path explicitly.
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    export PATH="$(brew --prefix llvm)/bin:$PATH";
    fi
  # /usr/bin/gcc points to an older compiler on both Linux and macOS.
  - if [ "$CXX" = "g++" ]; then export CXX="g++-10" CC="gcc-10"; fi
  # /usr/bin/clang points to an older compiler on both Linux and macOS.
  #
  # Homebrew's llvm package doesn't ship a versioned clang++ binary, so the values
  # below don't work on macOS. Fortunately, the path change above makes the
  # default values (clang and clang++) resolve to the correct compiler on macOS.
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    if [ "$CXX" = "clang++" ]; then export CXX="clang++-10" CC="clang-10"; fi;
    fi
  - echo ${CC}
  - echo ${CXX}
  - ${CXX} --version
  - cmake --version

after_success:
  - bash <(curl -s https://codecov.io/bash)

script:
  - cmake -E make_directory ./build && cd build
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - cmake --build . --config $BUILD_TYPE
  - ctest -C $BUILD_TYPE
